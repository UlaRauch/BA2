@online{abidAnswerKeycloakMissing2020,
  title = {Answer to "{{Keycloak}} - {{Missing}} Data in the Userinfo Response"},
  author = {Abid, Ala},
  date = {2020-02-05},
  url = {https://stackoverflow.com/a/60072580},
  urldate = {2023-06-29},
  organization = {{Stack Overflow}}
}

@online{AdvancedConfigurationSpring,
  title = {Advanced {{Configuration}} :: {{Spring Security}}},
  url = {https://docs.spring.io/spring-security/reference/servlet/oauth2/login/advanced.html},
  urldate = {2023-06-19},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\5RNASVJS\\advanced.html}
}

@article{akbulutPerformanceAnalysisMicroservice2019,
  title = {Performance {{Analysis}} of {{Microservice Design Patterns}}},
  author = {Akbulut, Akhan and Perros, Harry G.},
  date = {2019-11},
  journaltitle = {IEEE Internet Computing},
  volume = {23},
  number = {6},
  pages = {19--27},
  issn = {1941-0131},
  doi = {10.1109/MIC.2019.2951094},
  abstract = {Microservice-based solutions are currently gaining momentum because they do not have the disadvantages of traditional monolithic architectures. Business interest in microservices is increasing since the microservice architecture brings a lightweight, independent, reuse-oriented, and fast service deployment approach that minimizes infrastructural risks. This approach is at an early stage of its development, and in view of this, it is important to understand the performance of its design patterns. In this article, we obtained performance results related to query response time, efficient hardware usage, hosting costs, and packet-loss rate, for three microservice design patterns practiced in the software industry.},
  eventtitle = {{{IEEE Internet Computing}}},
  keywords = {Computer architecture,Design Patterns,Internet,Logic gates,Measurement,Message systems,Microservices,Microservices Architecture,Performance Analysis,Random access memory,Software Architecture,Time factors},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\RG5MEGGI\\Akbulut und Perros - 2019 - Performance Analysis of Microservice Design Patter.pdf;C\:\\Users\\Ula\\Zotero\\storage\\78JJL2CT\\8890660.html}
}

@article{alkhodaryEvaluationUsingBackendForFrontend,
  title = {The {{Evaluation}} of {{Using Backend-For-Frontend}} in a {{Microservices Environment}}},
  author = {Alkhodary, Samer},
  langid = {english},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\Q8P5UUQ4\\Alkhodary - The Evaluation of Using Backend-For-Frontend in a .pdf}
}

@online{ApacheJMeterUser,
  title = {Apache {{JMeter}} - {{User}}'s {{Manual}}: {{Elements}} of a {{Test Plan}}},
  url = {https://jmeter.apache.org/usermanual/test_plan.html},
  urldate = {2023-07-16},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\4B3XMBHH\\test_plan.html}
}

@online{AuthenticationPatternsBest,
  title = {Authentication {{Patterns}} and {{Best Practices For SPAs}}},
  url = {https://dev.indooroutdoor.io/authentication-patterns-and-best-practices-for-spas},
  urldate = {2023-03-15},
  abstract = {In this article I'll describe the Authentication Patterns and Best Practices you can use when connecting an SPAs to an API},
  langid = {english},
  organization = {{IO.IO}}
}

@online{AuthenticationPersistenceSession,
  title = {Authentication {{Persistence}} and {{Session Management}} :: {{Spring Security}}},
  url = {https://docs.spring.io/spring-security/reference/servlet/authentication/session-management.html},
  urldate = {2023-07-16},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\7TGLC68C\\session-management.html}
}

@online{AuthenticationSpringsecuritydocsAPI,
  title = {Authentication (Spring-Security-Docs 6.1.1 {{API}})},
  url = {https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/core/Authentication.html},
  urldate = {2023-06-25},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\2CHQA66L\\Authentication.html}
}

@online{AuthorizationArchitectureSpring,
  title = {Authorization {{Architecture}} :: {{Spring Security}}},
  url = {https://docs.spring.io/spring-security/reference/servlet/authorization/architecture.html},
  urldate = {2023-07-16},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\ZRZ3CLYS\\architecture.html}
}

@online{AuthorizationServicesGuide,
  title = {Authorization {{Services Guide}}},
  url = {https://www.keycloak.org/docs/latest/authorization_services/},
  urldate = {2023-06-30},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\X5HXIUSK\\authorization_services.html}
}

@online{AuthorizeHttpServletRequestsSpring,
  title = {Authorize {{HttpServletRequests}} :: {{Spring Security}}},
  url = {https://docs.spring.io/spring-security/reference/servlet/authorization/authorize-http-requests.html},
  urldate = {2023-06-28},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\9NRSZK4M\\authorize-http-requests.html}
}

@online{BackendFrontendAuthentication,
  title = {Backend {{For Frontend Authentication Pattern}} with {{Auth0}} and {{ASP}}.{{NET Core}}},
  url = {https://auth0.com/blog/backend-for-frontend-pattern-with-auth0-and-dotnet/},
  urldate = {2023-03-15},
  abstract = {Understand the Backend For Frontend authentication pattern and how it can be implemented in ASP.NET with Auth0.},
  langid = {english},
  organization = {{Auth0 - Blog}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\JDIMPKML\\backend-for-frontend-pattern-with-auth0-and-dotnet.html}
}

@online{BackendFrontendAuthentication2021,
  title = {Backend {{For Frontend Authentication Pattern}} with {{Auth0}} and {{ASP}}.{{NET Core}}},
  date = {2021-09-14T15:02:11+00:00},
  url = {https://community.auth0.com/t/backend-for-frontend-authentication-pattern-with-auth0-and-asp-net-core/69627},
  urldate = {2023-03-15},
  abstract = {Understand the Backend For Frontend authentication pattern and how it can be implemented in ASP.NET with Auth0.  Read more‚Ä¶  ‚úçüèª Brought to you by one of our Guest Author üöÄ @cibrax},
  langid = {english},
  organization = {{Auth0 Community}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\6D4U323C\\3.html}
}

@online{baeldungGrantedAuthorityRole2017,
  title = {Granted {{Authority Versus Role}} in {{Spring Security}} | {{Baeldung}}},
  author = {{baeldung}},
  date = {2017-09-24T09:37:01+00:00},
  url = {https://www.baeldung.com/spring-security-granted-authority-vs-role},
  urldate = {2023-06-17},
  abstract = {A quick guide to the difference between a granted authority and a role in Spring Security.},
  langid = {american},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\JSYAPG2Q\\spring-security-granted-authority-vs-role.html}
}

@article{bazeniucInformationSecurityMicroservices2021,
  title = {Information {{Security}} in {{Microservices Architectures}}},
  author = {Bazeniuc, Ivan and Zgureanu, Aureliu},
  date = {2021},
  publisher = {{Technical University of Moldova}},
  doi = {10.52326/ic-ecco.2021/SEC.03},
  url = {http://repository.utm.md/handle/5014/20102},
  urldate = {2022-11-20},
  abstract = {In this paper we investigate how can be provided security of an information system, which uses a microservice architecture. So, using of microservice architecture means that information system can be easily developed, deployed, and tested, but, on the other hand it means that it should be protected differently than the information system using monolith architecture. Firstly, a software architect should decide if each service should be protected separately or should be better to protect the system on the whole. Choosing the right way of protecting is very important, because, in some cases, protection of each service separately is not the best idea, as this could lead to code duplication. This means that, in case of necessity of changes a piece of code or fixing a bug it should be done everywhere this code appears. To avoid this, there are developed some services - so called gateways, which, also, very often have implemented the function of user/client authentication and authorization using protocol OAuth 2.0. Anyway, at each stage of development and implementation of a software product, it is necessary to solve many security related problems, and if it will not be done properly, then the company may incur enormous material losses or even may be closed.},
  isbn = {9789975426480},
  langid = {english},
  annotation = {Accepted: 2022-04-13T08:20:02Z},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\FG3A5KDL\\Bazeniuc und Zgureanu - 2021 - Information Security in Microservices Architecture.pdf;C\:\\Users\\Ula\\Zotero\\storage\\9ZDUUEVJ\\20102.html}
}

@software{BearerTokenAuthenticationEntryPointJava2023,
  title = {{{BearerTokenAuthenticationEntryPoint}}.Java},
  date = {2023-06-16T10:31:53Z},
  origdate = {2012-01-10T21:50:57Z},
  url = {https://github.com/spring-projects/spring-security/blob/61e2bae7f2a3127c6b0ca662a2611ac8fff091f2/oauth2/oauth2-resource-server/src/main/java/org/springframework/security/oauth2/server/resource/web/BearerTokenAuthenticationEntryPoint.java},
  urldate = {2023-06-16},
  abstract = {Spring Security 6.0},
  organization = {{Spring}}
}

@software{BearerTokenAuthenticationEntryPointSpringsecuritydocsAPI,
  title = {{{BearerTokenAuthenticationEntryPoint}} (Spring-Security-Docs 6.1.0 {{API}})},
  url = {https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/oauth2/server/resource/web/BearerTokenAuthenticationEntryPoint.html},
  urldate = {2023-06-16},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\6WBHL647\\BearerTokenAuthenticationEntryPoint.html}
}

@online{BearerTokenAuthenticationTokenSpringsecuritydocsAPI,
  title = {{{BearerTokenAuthenticationToken}} (Spring-Security-Docs 6.1.1 {{API}})},
  url = {https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/oauth2/server/resource/authentication/BearerTokenAuthenticationToken.html},
  urldate = {2023-06-25},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\43HAH9II\\BearerTokenAuthenticationToken.html}
}

@report{bertocciJSONWebToken2021,
  type = {Request for Comments},
  title = {{{JSON Web Token}} ({{JWT}}) {{Profile}} for {{OAuth}} 2.0 {{Access Tokens}}},
  author = {Bertocci, Vittorio},
  date = {2021-10},
  number = {RFC 9068},
  institution = {{Internet Engineering Task Force}},
  doi = {10.17487/RFC9068},
  url = {https://datatracker.ietf.org/doc/rfc9068},
  urldate = {2022-12-19},
  abstract = {This specification defines a profile for issuing OAuth 2.0 access tokens in JSON Web Token (JWT) format. Authorization servers and resource servers from different vendors can leverage this profile to issue and consume access tokens in an interoperable manner.},
  pagetotal = {15},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\YPJ5AAQB\\Bertocci - 2021 - JSON Web Token (JWT) Profile for OAuth 2.0 Access .pdf}
}

@report{bertocciTokenMediatingSession2021,
  type = {Internet Draft},
  title = {Token {{Mediating}} and Session {{Information Backend For Frontend}}},
  author = {Bertocci, Vittorio and Campbell, Brian},
  date = {2021-04-25},
  number = {draft-bertocci-oauth2-tmi-bff-01},
  institution = {{Internet Engineering Task Force}},
  url = {https://datatracker.ietf.org/doc/draft-bertocci-oauth2-tmi-bff-01},
  urldate = {2023-04-20},
  abstract = {This document describes how a JavaScript frontend can delegate access token acquisition to a backend component. In so doing, the frontend can access resource servers directly without taking on the burden of communicating with the authorization server, persisting tokens, and performing complex operations within the user agent that would require configuration, error management and reliance on authorization server capabilities (such as refresh token rotation) that aren't widely available today.},
  pagetotal = {18},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\FIEP9E77\\Bertocci und Campbell - 2021 - Token Mediating and session Information Backend Fo.pdf}
}

@report{brayJavaScriptObjectNotation2014,
  title = {The {{JavaScript Object Notation}} ({{JSON}}) {{Data Interchange Format}}},
  author = {Bray, T.},
  date = {2014-03},
  number = {RFC7159},
  pages = {RFC7159},
  institution = {{RFC Editor}},
  doi = {10.17487/rfc7159},
  url = {https://www.rfc-editor.org/info/rfc7159},
  urldate = {2023-06-30},
  langid = {english}
}

@online{ch4mpAnswerUseKeycloak2022,
  title = {Answer to "{{Use Keycloak Spring Adapter}} with {{Spring Boot}} 3"},
  author = {{ch4mp}},
  date = {2022-11-25},
  url = {https://stackoverflow.com/a/74572732},
  urldate = {2023-06-23},
  organization = {{Stack Overflow}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\U6X9QML2\\74572732.html}
}

@article{chatterjeeApplyingSpringSecurity2022,
  title = {Applying {{Spring Security Framework}} with {{KeyCloak-Based OAuth2}} to {{Protect Microservice Architecture APIs}}: {{A Case Study}}},
  shorttitle = {Applying {{Spring Security Framework}} with {{KeyCloak-Based OAuth2}} to {{Protect Microservice Architecture APIs}}},
  author = {Chatterjee, Ayan and Prinz, Andreas},
  date = {2022-01},
  journaltitle = {Sensors},
  volume = {22},
  number = {5},
  pages = {1703},
  publisher = {{Multidisciplinary Digital Publishing Institute}},
  issn = {1424-8220},
  doi = {10.3390/s22051703},
  url = {https://www.mdpi.com/1424-8220/22/5/1703},
  urldate = {2022-12-04},
  abstract = {In this study, we implemented an integrated security solution with Spring Security and Keycloak open-access platform (SSK) to secure data collection and exchange over microservice architecture application programming interfaces (APIs). The adopted solution implemented the following security features: open authorization, multi-factor authentication, identity brokering, and user management to safeguard microservice APIs. Then, we extended the security solution with a virtual private network (VPN), Blowfish and crypt (Bcrypt) hash, encryption method, API key, network firewall, and secure socket layer (SSL) to build up a digital infrastructure. To accomplish and describe the adopted SSK solution, we utilized a web engineering security method. As a case study, we designed and developed an electronic health coaching (eCoach) prototype system and hosted the system in the expanded digital secure infrastructure to collect and exchange personal health data over microservice APIs. We further described our adopted security solution‚Äôs procedural, technical, and practical considerations. We validated our SSK solution implementation by theoretical evaluation and experimental testing. We have compared the test outcomes with related studies qualitatively to determine the efficacy of the hybrid security solution in digital infrastructure. The SSK implementation and configuration in the eCoach prototype system has effectively secured its microservice APIs from an attack in all the considered scenarios with 100\% accuracy. The developed digital infrastructure with SSK solution efficiently sustained a load of (‚âà)300 concurrent users. In addition, we have performed a qualitative comparison among the following security solutions: Spring-based security, Keycloak-based security, and their combination (our utilized hybrid security solution), where SSK showed a promising outcome.},
  issue = {5},
  langid = {english},
  keywords = {API,authentication,authorization,encryption,external attacks,Keycloak,REST,spring-boot},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\YCD7XVPE\\Chatterjee und Prinz - 2022 - Applying Spring Security Framework with KeyCloak-B.pdf;C\:\\Users\\Ula\\Zotero\\storage\\4U7W275M\\1703.html}
}

@online{ClientAuthenticationSupport,
  title = {Client {{Authentication Support}} :: {{Spring Security}}},
  url = {https://docs.spring.io/spring-security/reference/servlet/oauth2/client/client-authentication.html},
  urldate = {2023-06-30},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\AIRG6E59\\client-authentication.html}
}

@video{cockroftadrianMigratingMicroservicesAdrian2014,
  entrysubtype = {video},
  title = {Migrating to {{Microservices}} by {{Adrian Cockroft}} ({{Part}} 1)},
  editor = {{Cockroft, Adrian}},
  editortype = {director},
  date = {2014-08-08},
  url = {https://www.youtube.com/watch?v=1wiMLkXz26M},
  urldate = {2022-12-23}
}

@online{computersecuritydivisionRoleBasedAccess2016,
  title = {Role {{Based Access Control}} | {{CSRC}} | {{CSRC}}},
  author = {Computer Security Division, Information Technology Laboratory},
  date = {2016-11-21},
  url = {https://csrc.nist.gov/projects/role-based-access-control},
  urldate = {2023-07-14},
  abstract = {One of the most challenging problems in managing large networks is the complexity of security administration. Role based access control (RBAC)~(also called 'role based security'),~as formalized in 1992 by David Ferraiolo and Rick Kuhn, has become the predominant model for advanced access control because it reduces this cost. ~  This project site explains RBAC concepts, costs and benefits, the~economic impact of RBAC, design and implementation issues, the RBAC standard, and advanced research topics. The NIST model for RBAC was adopted as American National Standard 359-2004 by the American National Standards Institute, International Committee for Information Technology Standards (ANSI/INCITS) on February 11, 2004. It was revised as INCITS 359-2012 in 2012.~See the~RBAC standard~section~for more information.  New to RBAC?~see:~Primary RBAC References and Background~|~RBAC FAQ~|~RBAC Case Studies. Implementing RBAC?~start with:~Role Engineering and RBAC Standards~|~RBAC Case Studies. Researcher or student?~see...},
  langid = {american},
  organization = {{CSRC | NIST}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\I9XF9V8L\\role-based-access-control.html}
}

@online{CoreFeatures,
  title = {Core {{Features}}},
  url = {https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config},
  urldate = {2023-06-06},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\U6U2ZWFF\\features.html}
}

@online{CostDataBreach2023,
  title = {Cost of a Data Breach 2022},
  date = {2023-04-25},
  url = {https://www.ibm.com/reports/data-breach},
  urldate = {2023-07-14},
  abstract = {Get the Cost of a Data Breach Report 2022 for the most up-to-date insights into the evolving cybersecurity threat landscape},
  langid = {american},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\XTGYUJIU\\data-breach.html}
}

@online{DeprecationKeycloakAdapters,
  title = {Deprecation of {{Keycloak}} Adapters - {{Keycloak}}},
  url = {https://www.keycloak.org/2022/02/adapter-deprecation},
  urldate = {2023-06-18},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\CKF4MZ5X\\adapter-deprecation.html}
}

@online{dhadukMicroservicesFrameworksScalable2022,
  title = {Microservices {{Frameworks}} for a {{Scalable Application}}},
  author = {Dhaduk, Hiren},
  date = {2022-03-15T10:34:49+00:00},
  url = {https://www.simform.com/blog/microservices-framework/},
  urldate = {2023-07-15},
  abstract = {Get to know about the best microservices framework to redefine your business capabilities and to build a reliable architecture},
  langid = {american},
  organization = {{Simform - Product Engineering Company}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\LX39K6YM\\microservices-framework.html}
}

@online{dinhtuanDevelopmentFrameworksMicroservicebased2022,
  title = {Development {{Frameworks}} for {{Microservice-based Applications}}: {{Evaluation}} and {{Comparison}}},
  shorttitle = {Development {{Frameworks}} for {{Microservice-based Applications}}},
  author = {Dinh-Tuan, Hai and Mora-Martinez, Maria and Beierle, Felix and Garzon, Sandro Rodriguez},
  date = {2022-03-14},
  eprint = {2203.07267},
  eprinttype = {arxiv},
  eprintclass = {cs},
  url = {http://arxiv.org/abs/2203.07267},
  urldate = {2023-07-15},
  abstract = {The microservice architectural style has gained much attention from both academia and industry recently as a novel way to design, develop, and deploy cloud-native applications.This concept encourages the decomposition of a monolith into multiple independently deployable units. A typical microservices-based application is formed of two service types: functional services, which provide the core business logic, and infrastructure services, which provide essential functionalities for a microservices ecosystem. To improve developers‚Äô productivity, many software frameworks have been developed to provide those reusable infrastructure services, allowing programmers to focus on implementing microservices in arbitrary ways. In this work, we made use of four open source frameworks to develop a cloud-based application in order to compare and evaluate their usability and practicability. While all selected frameworks promote asynchronous microservice design in general, there are differences in the ways each implements services. This leads to interoperability issues, such as message topic naming convention. Additionally, a key finding is the long startup times of JVM-based services that might reduce application‚Äôs resiliency and portability. Some other advantages come directly from the programming language, such as the ability of Go to generate native binary executables, which results in very small and compact Docker images (up to 78\% smaller compared to other languages).},
  langid = {english},
  pubstate = {preprint},
  keywords = {Computer Science - Software Engineering},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\PQXBLCN6\\Dinh-Tuan et al. - 2022 - Development Frameworks for Microservice-based Appl.pdf}
}

@online{dragoniMicroservicesYesterdayToday2017,
  title = {Microservices: Yesterday, Today, and Tomorrow},
  shorttitle = {Microservices},
  author = {Dragoni, Nicola and Giallorenzo, Saverio and Lafuente, Alberto Lluch and Mazzara, Manuel and Montesi, Fabrizio and Mustafin, Ruslan and Safina, Larisa},
  date = {2017-04-20},
  eprint = {1606.04036},
  eprinttype = {arxiv},
  eprintclass = {cs},
  url = {http://arxiv.org/abs/1606.04036},
  urldate = {2022-12-23},
  abstract = {Microservices is an architectural style inspired by service-oriented computing that has recently started gaining popularity. Before presenting the current state-of-the-art in the field, this chapter reviews the history of software architecture, the reasons that led to the diffusion of objects and services first, and microservices later. Finally, open problems and future challenges are introduced. This survey primarily addresses newcomers to the discipline, while offering an academic viewpoint on the topic. In addition, we investigate some practical issues and point out some potential solutions.},
  langid = {english},
  pubstate = {preprint},
  keywords = {Computer Science - Software Engineering},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\Y6MXJC5L\\Dragoni et al. - 2017 - Microservices yesterday, today, and tomorrow.pdf}
}

@incollection{ferraioloRoleBasedAccessControls1992,
  title = {Role-{{Based Access Controls}}},
  booktitle = {Proceedings of the 15th {{National Computer Security Conference}}},
  author = {Ferraiolo, David and Kuhn, Richard},
  date = {1992-10-13},
  pages = {554--563},
  publisher = {{National Institute of Standards and Technoloty}},
  doi = {10/13/role-based-access-controls},
  url = {https://csrc.nist.gov/publications/detail/conference-paper/1992/10/13/role-based-access-controls},
  urldate = {2023-07-14},
  abstract = {While Mandatory Access Controls (MAC) are appropriate for multilevel secure military applications, Discretionary Access Controls (DAC) are often perceived as meeting the security processing needs of industry and civilian government. This paper argues that reliance on DAC as the principal method of access control is unfounded and inappropriate for many commercial and civilian government organizations. The paper describes a type of non-discretionary access control: role-based access control (RBAC) that is more central to the secure processing needs of non-military systems than DAC.},
  eventtitle = {15th {{National Computer Security Conference}} ({{NCSC}}); {{October}} 13-16, 1992; {{Baltimore}}, {{Maryland}}, {{United States}}},
  langid = {english},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\2884MDC9\\role-based-access-controls.html}
}

@online{FinalOpenIDConnect,
  title = {Final: {{OpenID Connect Discovery}} 1.0 Incorporating Errata Set 1},
  url = {https://openid.net/specs/openid-connect-discovery-1_0.html},
  urldate = {2023-06-26},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\PC3CY24H\\openid-connect-discovery-1_0.html}
}

@thesis{florenImplementationAnalysisAuthentication2021,
  title = {Implementation and {{Analysis}} of {{Authentication}} and {{Authorization Methods}} in a {{Microservice Architecture}}: {{A Comparison Between Microservice Security Design Patterns}} for {{Authentication}} and {{Authorization Flows}}},
  author = {Flor√©n, Simon Tran},
  date = {2021},
  abstract = {Microservices have emerged as an attractive alternative to more classical monolithic software application architectures. Microservices provides many benefits that help with code base comprehension, deployability, testability, and scalability. As the Information technology (IT) industry has grown ever larger, it makes sense for the technology giants to adopt the microservice architecture to make use of these benefits. However, with new software solutions come new security vulnerabilities, especially when the technology is new and vulnerabilities are yet to be fully mapped out. Authentication and authorization are the cornerstone of any application that has a multitude of users. However, due to the lack of studies of microservices, stemming from their relatively young age, there are no standardized design patterns for how authentication and authorization are best implemented in a microservice.},
  langid = {english},
  keywords = {security patterns},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\LFS7GPIC\\Flor√©n - Implementation and Analysis of Authentication and .pdf}
}

@online{GettingStartedBuilding,
  title = {Getting {{Started}} | {{Building}} a {{Gateway}}},
  url = {https://spring.io/guides/gs/gateway/},
  urldate = {2023-06-11},
  abstract = {Learn how to configure a gateway},
  langid = {english},
  organization = {{Getting Started | Building a Gateway}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\2WRTLPXJ\\gateway.html}
}

@online{GettingStartedSpring,
  title = {Getting {{Started}} | {{Spring Boot}} and {{OAuth2}}},
  url = {https://spring.io/guides/tutorials/spring-boot-oauth2/},
  urldate = {2023-06-06},
  abstract = {A tutorial on "social" login and single sign on with Facebook and Github},
  langid = {english},
  organization = {{Getting Started | Spring Boot and OAuth2}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\FVWI25YR\\spring-boot-oauth2.html}
}

@online{HandlingLogoutsSpring,
  title = {Handling {{Logouts}} :: {{Spring Security}}},
  url = {https://docs.spring.io/spring-security/reference/servlet/authentication/logout.html},
  urldate = {2023-06-13},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\GQE6BZXM\\logout.html}
}

@report{hardtOAuthAuthorizationFramework2012,
  type = {Request for Comments},
  title = {The {{OAuth}} 2.0 {{Authorization Framework}}},
  author = {Hardt, Dick},
  date = {2012-10},
  number = {RFC 6749},
  institution = {{Internet Engineering Task Force}},
  doi = {10.17487/RFC6749},
  url = {https://datatracker.ietf.org/doc/rfc6749},
  urldate = {2022-12-12},
  abstract = {The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf. This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849. [STANDARDS-TRACK]},
  pagetotal = {76},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\MRT45T3G\\Hardt - 2012 - The OAuth 2.0 Authorization Framework.pdf}
}

@report{hardtOAuthAuthorizationFramework2023,
  type = {Internet Draft},
  title = {The {{OAuth}} 2.1 {{Authorization Framework}}},
  author = {Hardt, Dick and Parecki, Aaron and Lodderstedt, Torsten},
  date = {2023-03-13},
  number = {draft-ietf-oauth-v2-1-08},
  institution = {{Internet Engineering Task Force}},
  url = {https://datatracker.ietf.org/doc/draft-ietf-oauth-v2-1},
  urldate = {2023-06-27},
  abstract = {The OAuth 2.1 authorization framework enables an application to obtain limited access to a protected resource, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and an authorization service, or by allowing the application to obtain access on its own behalf. This specification replaces and obsoletes the OAuth 2.0 Authorization Framework described in RFC 6749 and the Bearer Token Usage in RFC 6750.},
  pagetotal = {88},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\QBR876N2\\Hardt et al. - 2023 - The OAuth 2.1 Authorization Framework.pdf}
}

@online{HowFixKeycloak2022,
  title = {How {{To Fix Keycloak Oauth2 OIDC Logout With Spring Cloud Gateway}}},
  date = {2022-08-11T00:00:00},
  url = {https://refactorfirst.com/fix-keycloak-oauth2-oidc-logout-with-spring-cloud-gateway},
  urldate = {2023-06-12},
  abstract = {In this article, we look at how we can fix the keycloak Oauth2 OIDC logout issue with Spring Cloud Gateway},
  langid = {english},
  organization = {{RefactorFirst}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\5ICJKVZQ\\fix-keycloak-oauth2-oidc-logout-with-spring-cloud-gateway.html}
}

@online{IntroductionSpringFramework,
  title = {Introduction to {{Spring Framework}}},
  url = {https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/overview.html},
  urldate = {2023-06-06},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\Y5PWNAZL\\overview.html}
}

@video{jacksonMicroserviceAuthenticationAuthorization2019,
  entrysubtype = {video},
  title = {Microservice {{Authentication}} and {{Authorization}}},
  editor = {Jackson, Nic},
  editortype = {director},
  date = {2019-02-15},
  url = {https://www.youtube.com/watch?v=ZjPF8yZ83Wo},
  urldate = {2022-12-18}
}

@report{jonesJSONWebToken2015,
  type = {Request for Comments},
  title = {{{JSON Web Token}} ({{JWT}})},
  author = {Jones, Michael and Bradley, John and Sakimura, Nat},
  date = {2015-05},
  number = {RFC 7519},
  institution = {{Internet Engineering Task Force}},
  doi = {10.17487/RFC7519},
  url = {https://datatracker.ietf.org/doc/rfc7519},
  urldate = {2022-12-19},
  abstract = {JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.},
  pagetotal = {30},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\JZHB65LU\\Jones et al. - 2015 - JSON Web Token (JWT).pdf}
}

@report{jonesOAuthAuthorizationFramework2012,
  type = {Request for Comments},
  title = {The {{OAuth}} 2.0 {{Authorization Framework}}: {{Bearer Token Usage}}},
  shorttitle = {The {{OAuth}} 2.0 {{Authorization Framework}}},
  author = {Jones, Michael and Hardt, Dick},
  date = {2012-10},
  number = {RFC 6750},
  institution = {{Internet Engineering Task Force}},
  doi = {10.17487/RFC6750},
  url = {https://datatracker.ietf.org/doc/rfc6750},
  urldate = {2022-12-18},
  abstract = {This specification describes how to use bearer tokens in HTTP requests to access OAuth 2.0 protected resources. Any party in possession of a bearer token (a "bearer") can use it to get access to the associated resources (without demonstrating possession of a cryptographic key). To prevent misuse, bearer tokens need to be protected from disclosure in storage and in transport. [STANDARDS-TRACK]},
  pagetotal = {18},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\X7M34KYE\\Jones und Hardt - 2012 - The OAuth 2.0 Authorization Framework Bearer Toke.pdf}
}

@report{jonesOAuthAuthorizationServer2018,
  title = {{{OAuth}} 2.0 {{Authorization Server Metadata}}},
  author = {Jones, M. and Sakimura, N. and Bradley, J.},
  date = {2018-06},
  number = {RFC8414},
  pages = {RFC8414},
  institution = {{RFC Editor}},
  doi = {10.17487/RFC8414},
  url = {https://www.rfc-editor.org/info/rfc8414},
  urldate = {2023-06-30},
  langid = {english}
}

@report{jonesOpenIDConnectRPInitiated2022,
  title = {{{OpenID Connect RP-Initiated Logout}} 1.0},
  author = {Jones, Michael and family=Medeiros, given=Breno, prefix=de, useprefix=true and Agarwal, N. and Sakimura, N. and Bradley, John},
  date = {2022-09-12},
  url = {https://openid.net/specs/openid-connect-rpinitiated-1_0.html},
  urldate = {2023-06-19}
}

@online{JwtAuthenticationTokenSpringsecuritydocsAPI,
  title = {{{JwtAuthenticationToken}} (Spring-Security-Docs 6.1.1 {{API}})},
  url = {https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/oauth2/server/resource/authentication/JwtAuthenticationToken.html},
  urldate = {2023-06-25},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\WZPYDC7M\\JwtAuthenticationToken.html}
}

@online{kelechavaRoleBasedAccess2018,
  title = {Role {{Based Access Control}} ({{RBAC}})},
  author = {Kelechava, Brad},
  date = {2018-05-17T16:45:37+00:00},
  url = {https://blog.ansi.org/2018/05/role-based-access-control-rbac-incits-359/},
  urldate = {2023-07-16},
  abstract = {INCITS 359-2012 (R2017): Information technology - Role Based Access Control is an adoption of the NIST model approach for managing users‚Äô access to information technology resources by assigning users roles and privileges. Its model and administrative functional specification have many advantages.},
  langid = {american},
  organization = {{The ANSI Blog}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\JP833JQ8\\role-based-access-control-rbac-incits-359.html}
}

@online{Keycloak,
  title = {Keycloak},
  url = {https://www.keycloak.org/},
  urldate = {2023-06-25},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\7922K5VQ\\www.keycloak.org.html}
}

@video{laurspilcaSpringSecurityFundamentals2023,
  entrysubtype = {video},
  title = {Spring {{Security Fundamentals}} - {{Lesson}} 14 - {{The OAuth2 Resource Server}} - {{Part}} 1},
  editor = {{Laur Spilca}},
  editortype = {director},
  date = {2023-01-20},
  url = {https://www.youtube.com/watch?v=j7SOIM_HL5g},
  urldate = {2023-06-17},
  abstract = {In this stream, we discuss Spring Security using the latest available version in 2022. We'll discuss configurations for authentication and authorization, tips and tricks, how to learn Spring Security, vulnerabilities, OAuth 2, and many more.}
}

@online{lewisMicroservices2014,
  title = {Microservices},
  author = {Lewis, James and Fowler, Martin},
  date = {2014-03-25},
  url = {https://martinfowler.com/articles/microservices.html},
  urldate = {2022-12-23},
  abstract = {Defining the microservices architectural style by describing their nine common characteristics},
  organization = {{martinfowler.com}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\CATXLELT\\microservices.html}
}

@report{lodderstedtOAuthSecurityBest2023,
  type = {Internet Draft},
  title = {{{OAuth}} 2.0 {{Security Best Current Practice}}},
  author = {Lodderstedt, Torsten and Bradley, John and Labunets, Aney and Fett, Daniel},
  date = {2023-06-05},
  number = {draft-ietf-oauth-security-topics-23},
  institution = {{Internet Engineering Task Force}},
  url = {https://datatracker.ietf.org/doc/draft-ietf-oauth-security-topics},
  urldate = {2023-06-18},
  abstract = {This document describes best current security practice for OAuth 2.0. It updates and extends the OAuth 2.0 Security Threat Model to incorporate practical experiences gathered since OAuth 2.0 was published and covers new threats relevant due to the broader application of OAuth 2.0.},
  pagetotal = {62},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\VHKEYP8W\\Lodderstedt et al. - 2023 - OAuth 2.0 Security Best Current Practice.pdf}
}

@report{lodderstedtOAuthThreatModel2013,
  type = {Request for Comments},
  title = {{{OAuth}} 2.0 {{Threat Model}} and {{Security Considerations}}},
  author = {Lodderstedt, Torsten and McGloin, Mark and Hunt, Phil},
  date = {2013-01},
  number = {RFC 6819},
  institution = {{Internet Engineering Task Force}},
  doi = {10.17487/RFC6819},
  url = {https://datatracker.ietf.org/doc/rfc6819},
  urldate = {2022-12-20},
  abstract = {This document gives additional security considerations for OAuth, beyond those in the OAuth 2.0 specification, based on a comprehensive threat model for the OAuth 2.0 protocol. This document is not an Internet Standards Track specification; it is published for informational purposes.},
  pagetotal = {71},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\47284I5Y\\Lodderstedt et al. - 2013 - OAuth 2.0 Threat Model and Security Considerations.pdf}
}

@article{luSurveyMicroservicesTrust2023,
  title = {A {{Survey}} on {{Microservices Trust Models}} for {{Open Systems}}},
  author = {Lu, Zhongyi and Delaney, Declan T. and Lillis, David},
  date = {2023},
  journaltitle = {IEEE Access},
  volume = {11},
  pages = {28840--28855},
  issn = {2169-3536},
  doi = {10.1109/ACCESS.2023.3260147},
  abstract = {The microservices architecture (MSA) is a form of distributed systems architecture that has been widely adopted in large-scale software systems in recent years. As with other distributed system architectures, one of the challenges that MSA faces is establishing trust between the microservices, particularly in the context of open systems. The boundaries of open systems are unlimited and unknown, which means that they can be applied to any use case. Microservices can leave or join an open system arbitrarily, without restriction as to ownership or origin, and MSA systems can scale extensively. The organisation of microservices (in terms of the roles they play and the communication links they utilise) can also change in response to changes in the environment in which the system is situated. The management of trust within MSAs is of great importance as the concept of trust is critical to microservices communication, and the operation of an open MSA system is highly reliant on communication between these fine-grained microservices. Thus, a trust model should also be able to manage trust in an open environment. Current trust management solutions, however, are often domain-specific and many are not specifically tailored towards the open system model. This motivates research on trust management in the context of open MSA systems. In this paper, we examine existing microservices trust models, identify the limitations of these models in the context of the principles of open microservices systems, propose a set of qualities for open microservices trust models that emerge from these limitations, and assess selected microservices trust models using the proposed qualities.},
  eventtitle = {{{IEEE Access}}},
  keywords = {Computer architecture,Context modeling,Microservice architectures,Microservices,Object oriented modeling,open systems,Open systems,service oriented architecture,trust management,Trust management,Web services},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\YL5WM2V6\\Lu et al. - 2023 - A Survey on Microservices Trust Models for Open Sy.pdf;C\:\\Users\\Ula\\Zotero\\storage\\UQQUN8YN\\10077578.html}
}

@online{MajorReasonsChoose2023,
  title = {7 {{Major Reasons}} to {{Choose Spring Boot For Microservices Development}}},
  date = {2023-04-03T23:47:50+00:00},
  url = {https://www.geeksforgeeks.org/why-to-choose-spring-boot-for-microservices-development/},
  urldate = {2023-07-15},
  abstract = {A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.},
  langid = {american},
  organization = {{GeeksforGeeks}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\B5IHNG2Q\\why-to-choose-spring-boot-for-microservices-development.html}
}

@inproceedings{matarApproachEvaluatingPotential2023,
  title = {An {{Approach}} for {{Evaluating}} the {{Potential Impact}} of {{Anti-Patterns}} on {{Microservices Performance}}},
  booktitle = {2023 {{IEEE}} 20th {{International Conference}} on {{Software Architecture Companion}} ({{ICSA-C}})},
  author = {Matar, Raghad and Jahiƒá, Jasmin},
  date = {2023-03},
  pages = {167--170},
  issn = {2768-4288},
  doi = {10.1109/ICSA-C57050.2023.00044},
  abstract = {The microservices architectural style has been increasingly adopted in recent years due to its advantageous characteristics. While there exist design patterns for microservices that are theoretically beneficial for ensuring performance (and anti-patterns that should be avoided), they do not always lead to the expected impact. Some designs are solutions for achieving quality properties other than performance, and while they might be categorized as anti-patterns in theory, their influence on system performance can be minimal, depending on the context. Architects find it hard to reason about these trade-offs and the impact that design decisions will have on performance before implementing them. To solve this problem, in this paper, we propose an approach that enables rapid evaluation of high-level architectural models by combining both static and dynamic analysis. The static analysis identifies the design anti-patterns that are known to hinder system performance and guides the architect in reasoning about these design decisions. The approach then generates source code for the system under study based on the architectural design model for a subsequent dynamic analysis to assess whether the statically detected anti-patterns do indeed have a negative effect on the performance of the analyzed system.},
  eventtitle = {2023 {{IEEE}} 20th {{International Conference}} on {{Software Architecture Companion}} ({{ICSA-C}})},
  keywords = {Analytical models,anti-patterns,Cognition,design decisions,Microservice architectures,microservices,performance testing,Software architecture,Source coding,Static analysis,System performance},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\PEYTCJJJ\\Matar und Jahiƒá - 2023 - An Approach for Evaluating the Potential Impact of.pdf;C\:\\Users\\Ula\\Zotero\\storage\\6PRQD8MJ\\10092669.html}
}

@report{MicroservicesEnterprise20212021,
  type = {White paper},
  title = {Microservices in the Enterprise, 2021: {{Real}} Benefits, Worth the Challenges. {{How}} Organizations Are Finding Speed, Agility and Resiliency through Microservices.},
  date = {2021},
  institution = {{IBM Market Development \& Insights}},
  url = {https://www.ibm.com/downloads/cas/OQG4AJAM},
  urldate = {2023-07-15},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\MRLR838Q\\OQG4AJAM.pdf}
}

@online{MicroservicesUseOrganizations,
  title = {Microservices Use in Organizations Worldwide 2021},
  url = {https://www.statista.com/statistics/1236823/microservices-usage-per-organization-size/},
  urldate = {2023-07-15},
  abstract = {In 2021, 85 percent of respondents from large organizations with 5,000 or more employees state currently using microservices.},
  langid = {english},
  organization = {{Statista}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\PRD8B3C2\\microservices-usage-per-organization-size.html}
}

@article{nehmeSecuringMicroservices2019,
  title = {Securing {{Microservices}}},
  author = {Nehme, Antonio and Jesus, Vitor and Mahbub, Khaled and Abdallah, Ali},
  date = {2019-01},
  journaltitle = {IT Professional},
  volume = {21},
  number = {1},
  pages = {42--49},
  issn = {1941-045X},
  doi = {10.1109/MITP.2018.2876987},
  abstract = {Microservices have drawn significant interest in recent years and are now successfully finding their way into different areas, from enterprise IT and the Internet of Things to critical applications. This paper discusses how microservices can be secured at different levels and stages considering a common software development lifecycle.},
  eventtitle = {{{IT Professional}}},
  keywords = {Logic gates,Product life cycle management,Security,Service-oriented architecture,Software development management},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\EV23B433\\Nehme et al. - 2019 - Securing Microservices.pdf;C\:\\Users\\Ula\\Zotero\\storage\\Z2XKKK67\\8657392.html}
}

@article{nguyenApplyingSpringSecurity2019,
  title = {Applying {{Spring Security Framework}} and {{OAuth2 To Protect Microservice Architecture API}}},
  author = {Nguyen, Quy and Baker, Oras},
  date = {2019-06},
  journaltitle = {Journal of Software},
  shortjournal = {JSW},
  pages = {257--264},
  issn = {1796217X},
  doi = {10.17706/jsw.14.6.257-264},
  url = {http://www.jsoftware.us/index.php?m=content&c=index&a=show&catid=208&id=2948},
  urldate = {2022-12-05},
  abstract = {Since 2014, Microservice Architecture (MSA) has been widely applied and deployed by big companies such as Google, Netflix and Twitter. This is a way of architecting software systems in which the services of a single application are decomposed then deployed and executed separately. This research examines the possibility of applying Spring Security Framework and OAuth2 to secure microservice APIs which are built on top of Spring Framework. By developing a Proof of Concept (POC) of an Inventory Management System using MSA on top of Spring Framework, Spring Security Framework and OAuth2. we have conducted security tests over the POC using unit testing and manual testing techniques to examine if there are any vulnerabilities and we were able to show and confirm the effectiveness of the Spring Security Framework and OAuth2 in securing Spring-based APIs.},
  langid = {english},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\BDXKGU6E\\Southern Institute of Technology, Invercargill, New Zealand. et al. - 2019 - Applying Spring Security Framework and OAuth2 To P.pdf}
}

@online{OAuth2ResourceServerConfigurerSpringsecuritydocsAPI,
  title = {{{OAuth2ResourceServerConfigurer}} (Spring-Security-Docs 6.1.0 {{API}})},
  url = {https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer.html},
  urldate = {2023-06-18},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\V2TS4Y5R\\OAuth2ResourceServerConfigurer.html}
}

@online{OAuth2TokenValidatorSpringsecuritydocsAPI,
  title = {{{OAuth2TokenValidator}} (Spring-Security-Docs 6.1.1 {{API}})},
  url = {https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/oauth2/core/OAuth2TokenValidator.html},
  urldate = {2023-06-30},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\FJ3U6FFR\\OAuth2TokenValidator.html}
}

@online{OAuthResourceServer,
  title = {{{OAuth}} 2.0 {{Resource Server JWT}} :: {{Spring Security}}},
  url = {https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/jwt.html},
  urldate = {2023-06-16},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\H7TB9PV9\\jwt.html}
}

@online{OAuthResourceServerb,
  title = {{{OAuth}} 2.0 {{Resource Server}} :: {{Spring Security}}},
  url = {https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/index.html},
  urldate = {2023-06-16},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\7294S3HJ\\index.html}
}

@online{OpenIDConnectDiscovery,
  title = {{{OpenID Connect Discovery}} 1.0},
  url = {https://openid.net/specs/openid-connect-discovery-1_0.html},
  urldate = {2023-06-11},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\A4H5TJ7F\\openid-connect-discovery-1_0.html}
}

@online{OWASPTop10,
  title = {{{OWASP Top}} 10 {{API Security Risks}} ‚Äì 2023 - {{OWASP API Security Top}} 10},
  url = {https://owasp.org/API-Security/editions/2023/en/0x11-t10/},
  urldate = {2023-06-27},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\8D22JE8K\\0x11-t10.html}
}

@online{paraschiveugenComparisonSpringSpring2018,
  title = {A {{Comparison Between Spring}} and {{Spring Boot}} | {{Baeldung}}},
  author = {{Paraschiv, Eugen}},
  date = {2018-09-29T09:21:58+00:00},
  url = {https://www.baeldung.com/spring-vs-spring-boot},
  urldate = {2023-06-06},
  abstract = {Understand the difference between Spring and Spring Boot.},
  langid = {american}
}

@report{pareckiOAuthBrowserBasedApps2023,
  type = {Internet Draft},
  title = {{{OAuth}} 2.0 for {{Browser-Based Apps}}},
  author = {Parecki, Aaron and Waite, David},
  date = {2023-06-29},
  number = {draft-ietf-oauth-browser-based-apps-14},
  institution = {{Internet Engineering Task Force}},
  url = {https://datatracker.ietf.org/doc/draft-ietf-oauth-browser-based-apps-14},
  urldate = {2023-07-14},
  abstract = {This specification details the security considerations and best practices that must be taken into account when developing browser- based applications that use OAuth 2.0. Discussion Venues This note is to be removed before publishing as an RFC. Discussion of this document takes place on the Web Authorization Protocol Working Group mailing list (oauth@ietf.org), which is archived at https://mailarchive.ietf.org/arch/browse/oauth/. Source for this draft and an issue tracker can be found at https://github.com/oauth-wg/oauth-browser-based-apps.},
  pagetotal = {35},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\Z9VU7YIE\\Parecki und Waite - 2023 - OAuth 2.0 for Browser-Based Apps.pdf}
}

@online{PrincipalJavaDevelopment,
  title = {Principal ({{Java Development Kit Version}} 17 {{API Specification}})},
  url = {https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/Principal.html},
  urldate = {2023-06-25},
  abstract = {declaration: module: java.base, package: java.security, interface: Principal},
  langid = {english},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\LJBJSQ5G\\Principal.html}
}

@online{rattanukulMicrousityTestingTool2023,
  title = {Microusity: {{A}} Testing Tool for {{Backends}} for {{Frontends}} ({{BFF}}) {{Microservice Systems}}},
  shorttitle = {Microusity},
  author = {Rattanukul, Pattarakrit and Makaranond, Chansida and Watanakulcharus, Pumipat and Ragkhitwetsagul, Chaiyong and Nearunchorn, Tanapol and Visoottiviseth, Vasaka and Choetkiertikul, Morakot and Sunetnanta, Thanwadee},
  date = {2023-02-22},
  eprint = {2302.11150},
  eprinttype = {arxiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.2302.11150},
  url = {http://arxiv.org/abs/2302.11150},
  urldate = {2023-03-15},
  abstract = {The microservice software architecture is more scalable and efficient than its monolithic predecessor. Despite its increasing adoption, microservices might expose security concerns and issues that are distinct from those associated with monolithic designs. We propose Microusity, a tool that performs RESTful API testing on a specific type of microservice pattern called back end for front end (BFF). We design a novel approach to trace BFF requests using the port mapping between requests to BFF and the sub-requests sent to back-end microservices. Furthermore, our tool can pinpoint which of the back end service causing the internal server error, which may lead to unhandled errors or vulnerabilities. Microusity provides an error report and a graph visualization that reveal the source of the error and supports developers in comprehension and debugging of the errors. The evaluation of eight software practitioners shows that Microusity and its security test reports are useful for investigating and understanding problems in BFF systems. The prototype tool and the video demo of the tool can be found at https://github.com/MUICT-SERU/MICROUSITY.},
  pubstate = {preprint},
  keywords = {Computer Science - Software Engineering},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\GEFQW9S7\\Rattanukul et al. - 2023 - Microusity A testing tool for Backends for Fronte.pdf;C\:\\Users\\Ula\\Zotero\\storage\\SRPH4JHB\\2302.html}
}

@thesis{rauchAuthxmicroservicesurauchPdf2023,
  type = {bathesis},
  title = {Authx-Microservices-Urauch.Pdf},
  author = {Rauch, Ursula},
  date = {2023-01-15},
  institution = {{FH Campus}},
  location = {{Wien}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\DY3EAHGB\\authx-microservices-urauch.pdf}
}

@online{rozaSpringSecurityOpenID2017,
  title = {Spring {{Security}} and {{OpenID Connect}} | {{Baeldung}}},
  author = {Roza, Ger},
  date = {2017-03-08T08:40:14+00:00},
  url = {https://www.baeldung.com/spring-security-openid-connect},
  urldate = {2023-06-13},
  abstract = {Learn how to set up OpenID Connect (from Google) with a simple Spring Security application.},
  langid = {american},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\THGRV3ZX\\spring-security-openid-connect.html}
}

@online{rozaWebClientOAuth2Support2019,
  title = {{{WebClient}} and {{OAuth2 Support}} | {{Baeldung}}},
  author = {Roza, Ger},
  date = {2019-01-13T19:42:43+00:00},
  url = {https://www.baeldung.com/spring-webclient-oauth2},
  urldate = {2023-06-05},
  abstract = {Learn how to set up an application as an OAuth2 Client and use the WebClient to retrieve a secured resource in a full-reactive stack.},
  langid = {american},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\W564JVEC\\spring-webclient-oauth2.html}
}

@inproceedings{sailerEvaluationFrameworksMicroservices2021,
  title = {An {{Evaluation}} of {{Frameworks}} for {{Microservices Development}}},
  booktitle = {Advances in {{Service-Oriented}} and {{Cloud Computing}}},
  author = {Sailer, Isabell and Lichtenth√§ler, Robin and Wirtz, Guido},
  editor = {Zirpins, Christian and Paraskakis, Iraklis and Andrikopoulos, Vasilios and Kratzke, Nane and Pahl, Claus and El Ioini, Nabil and Andreou, Andreas S. and Feuerlicht, George and Lamersdorf, Winfried and Ortiz, Guadalupe and Van den Heuvel, Willem-Jan and Soldani, Jacopo and Villari, Massimo and Casale, Giuliano and Plebani, Pierluigi},
  date = {2021},
  pages = {90--102},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  abstract = {Accompanying the popularity of the microservices architectural style, frameworks have been released which claim to specifically support the development of microservices-based applications. We investigate how well such frameworks support microservices characteristics both theoretically by a documentation analysis and practically by exemplary implementations. Our findings are that the frameworks cover most of the characteristics, but differ significantly in the way how. Therefore such frameworks can facilitate the development of microservices-based applications, but combining different frameworks can be a challenge.},
  isbn = {978-3-030-71906-7}
}

@report{sakimuraOpenIDConnectCore2014,
  title = {{{OpenID Connect Core}} 1.0},
  author = {Sakimura, Nat and Bradley, John and Jones, Michael and family=Medeiros, given=Breno, prefix=de, useprefix=true and Mortimore, Chuck},
  date = {2014-08},
  institution = {{OpenID Foundation (OIDF)}},
  url = {https://openid.net/specs/openid-connect-core-1_0.html},
  urldate = {2022-12-19},
  abstract = {OpenID Connect 1.0 is a simple identity layer on top of the OAuth 2.0 protocol. It enables Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in an interoperable and REST-like manner. This specification defines the core OpenID Connect functionality: authentication built on top of OAuth 2.0 and the use of Claims to communicate information about the End-User. It also describes the security and privacy considerations for using OpenID Connect.},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\C879SMHJ\\openid-connect-core-1_0.html}
}

@report{sakimuraProofKeyCode2015,
  title = {Proof {{Key}} for {{Code Exchange}} by {{OAuth Public Clients}}},
  author = {Sakimura, N. and Bradley, J. and Agarwal, N.},
  date = {2015-09},
  number = {RFC7636},
  pages = {RFC7636},
  institution = {{RFC Editor}},
  doi = {10.17487/RFC7636},
  url = {https://www.rfc-editor.org/info/rfc7636},
  urldate = {2022-12-22},
  abstract = {OAuth 2.0 public clients utilizing the Authorization Code Grant are susceptible to the authorization code interception attack. This specification describes the attack as well as a technique to mitigate against the threat through the use of Proof Key for Code Exchange (PKCE, pronounced "pixy").},
  langid = {english},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\W3FK9FMR\\Sakimura et al. - 2015 - Proof Key for Code Exchange by OAuth Public Client.pdf}
}

@online{SamNewmanBackends,
  title = {Sam {{Newman}} - {{Backends For Frontends}}},
  url = {https://samnewman.io/patterns/architectural/bff/},
  urldate = {2023-04-20},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\LP9S7TAT\\bff.html}
}

@online{sandeepaUsingKeycloakSpring2023,
  title = {Using {{Keycloak}} with {{Spring Boot}} 3.0},
  author = {Sandeepa, Yasas},
  date = {2023-02-16T17:02:42},
  url = {https://medium.com/geekculture/using-keycloak-with-spring-boot-3-0-376fa9f60e0b},
  urldate = {2023-06-17},
  abstract = {Hands-on guidance to integrate Keycloak with Spring Boot v3},
  langid = {english},
  organization = {{Geek Culture}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\AAQGI6J3\\using-keycloak-with-spring-boot-3-0-376fa9f60e0b.html}
}

@online{SecuringApplicationsServices,
  title = {Securing {{Applications}} and {{Services Guide}}},
  url = {https://www.keycloak.org/docs/latest/securing_apps/},
  urldate = {2023-06-29}
}

@online{SecuringSpringApplications,
  title = {Securing {{Spring Applications With OAuth2}}},
  url = {https://github.com/ch4mpy/spring-addons/tree/master/samples/tutorials},
  urldate = {2023-06-18},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\S8T2ZLBP\\tutorials.html}
}

@online{ServerAdministrationGuidea,
  title = {Server {{Administration Guide}}},
  url = {https://www.keycloak.org/docs/latest/server_admin/},
  urldate = {2023-06-24},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\KWL98XVG\\server_admin.html}
}

@online{ServletAuthenticationArchitecture,
  title = {Servlet {{Authentication Architecture}} :: {{Spring Security}}},
  url = {https://docs.spring.io/spring-security/reference/servlet/authentication/architecture.html#servlet-authentication-authentication},
  urldate = {2023-06-17},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\VI6GTSTB\\architecture.html}
}

@article{shmelevaHowMicroservicesAre,
  title = {How {{Microservices}} Are {{Changing}} the {{Security Landscape}}},
  author = {Shmeleva, Ekaterina},
  langid = {english},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\SXM48IB3\\Shmeleva - How Microservices are Changing the Security Landsc.pdf}
}

@book{siriwardenaAdvancedAPISecurity2020,
  title = {Advanced {{API Security}}: {{OAuth}} 2.0 and {{Beyond}}},
  shorttitle = {Advanced {{API Security}}},
  author = {Siriwardena, Prabath},
  date = {2020},
  publisher = {{Apress}},
  location = {{Berkeley, CA}},
  doi = {10.1007/978-1-4842-2050-4},
  url = {http://link.springer.com/10.1007/978-1-4842-2050-4},
  urldate = {2022-12-02},
  isbn = {978-1-4842-2049-8 978-1-4842-2050-4},
  langid = {english},
  keywords = {API's,IOT Security,JSON,JSON Encrytption,JSON Seurity,OAuth,REST,REST Security,SAML,Securing API's,User Managed Access (UMA)},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\GJQNRF2B\\Siriwardena - 2020 - Advanced API Security OAuth 2.0 and Beyond.pdf;C\:\\Users\\Ula\\Zotero\\storage\\JA7YKLAH\\10.1007@978-1-4842-2050-4-1.pdf}
}

@book{siriwardenaMicroservicesSecurityAction2020,
  title = {Microservices Security in Action},
  author = {Siriwardena, Prabath and Dias, Nuwan},
  date = {2020},
  publisher = {{Manning Publications Co}},
  location = {{Shelter Island, NY}},
  abstract = {Microservices Security in Action teaches you how to address microservices-specific security challenges throughout the system. This practical guide includes plentiful hands-on exercises using industry-leading open-source tools and examples using Java and Spring Boot},
  isbn = {978-1-61729-595-9},
  langid = {english},
  pagetotal = {588},
  keywords = {Application software,Business,Computer architecture,Computer networks,Data processing Security measures,Development,Distributed operating systems (Computers),Security measures,Software architecture},
  annotation = {OCLC: on1190759452},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\EVWHH9TX\\Siriwardena und Dias - 2020 - Microservices security in action.pdf}
}

@online{Slant13Best2023,
  title = {Slant - 13 {{Best}} Microservices Frameworks as of 2023},
  date = {2023-07-14},
  url = {https://www.slant.co/topics/16161/~microservices-frameworks},
  urldate = {2023-07-15},
  abstract = {ASP.NET Core, Spring Boot, and Eclipse Vert.x are probably your best bets out of the 13 options considered. "Multi platform" is the primary reason people pick ASP.NET Core over the competition. This page is powered by a knowledgeable community that helps you make an informed decision.},
  langid = {english},
  organization = {{Slant}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\N2ZV3AS8\\~microservices-frameworks.html}
}

@online{SpringaddonsSamplesTutorials,
  title = {Spring-Addons/Samples/Tutorials/Bff at Master ¬∑ Ch4mpy/Spring-Addons},
  url = {https://github.com/ch4mpy/spring-addons},
  urldate = {2023-06-26},
  abstract = {Ease spring OAuth2 resource-servers configuration and testing - spring-addons/samples/tutorials/bff at master ¬∑ ch4mpy/spring-addons},
  langid = {english},
  organization = {{GitHub}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\BZQ3IAC9\\bff.html}
}

@online{SpringBoot,
  title = {Spring {{Boot}}},
  url = {https://spring.io/projects/spring-boot},
  urldate = {2023-06-06},
  abstract = {Level up your Java code and explore what Spring can do for you.},
  langid = {english},
  organization = {{Spring Boot}},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\DVP89IJI\\spring-boot.html}
}

@online{SpringBootReferencea,
  title = {Spring {{Boot Reference Documentation}}},
  url = {https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#actuator.endpoints.security},
  urldate = {2023-06-18},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\TZT43TAD\\htmlsingle.html}
}

@online{SpringCloudGatewaya,
  title = {Spring {{Cloud Gateway}}},
  url = {https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/},
  urldate = {2023-06-06},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\DD4QI4IH\\html.html}
}

@online{SpringVsSpring,
  title = {Spring vs {{Spring Boot}}: {{A Detailed Comparison}} ({{Updated}} 2023)},
  shorttitle = {Spring vs {{Spring Boot}}},
  url = {https://www.turing.com/kb/spring-vs-spring-boots-best-web-apps},
  urldate = {2023-06-06},
  abstract = {Spring Framework provides extensive infrastructure support for Java Application Development while Spring Boot paves a Faster Ecosystem.},
  langid = {english},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\JG4TW9H8\\spring-vs-spring-boots-best-web-apps.html}
}

@online{swoyerMicroservicesAdoption20202020,
  title = {Microservices {{Adoption}} in 2020},
  author = {Swoyer, Steve, Mike Loukides},
  date = {2020-07-15T09:33:44-04:00},
  url = {https://www.oreilly.com/radar/microservices-adoption-in-2020/},
  urldate = {2023-07-14},
  abstract = {Everyone‚Äôs talking about microservices. Who‚Äôs actually doing it?},
  langid = {american},
  organization = {{O‚ÄôReilly Media}}
}

@online{TokenRelayGatewayFilterFactory,
  title = {The {{TokenRelay GatewayFilter Factory}}},
  url = {https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-tokenrelay-gatewayfilter-factory},
  urldate = {2023-06-06},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\KP2CIYHG\\html.html}
}

@online{wagdeOAuthResourceServer2020,
  title = {{{OAuth}} 2.0 {{Resource Server With Spring Security}} 5 | {{Baeldung}}},
  author = {Wagde, Sampada},
  date = {2020-08-12T05:27:25+00:00},
  url = {https://www.baeldung.com/spring-security-oauth-resource-server},
  urldate = {2023-06-16},
  abstract = {Learn how to configure a Spring Security based resource server application for validating JWT as well as opaque tokens.},
  langid = {american},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\Y2SE5GVF\\spring-security-oauth-resource-server.html}
}

@online{wagdeUsingJWTSpring2018,
  title = {Using {{JWT}} with {{Spring Security OAuth}} | {{Baeldung}}},
  author = {Wagde, Sampada},
  date = {2018-01-20T22:25:00+00:00},
  url = {https://www.baeldung.com/spring-security-oauth-jwt},
  urldate = {2023-06-25},
  abstract = {A guide to using JWT tokens with Spring Security 5.},
  langid = {american},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\UB6WA7AT\\spring-security-oauth-jwt.html}
}

@book{wallsSpringBootAction2016,
  title = {Spring {{Boot}} in Action},
  author = {Walls, Craig},
  date = {2016},
  publisher = {{Manning Publications}},
  location = {{Shelter Island, NY}},
  isbn = {978-1-61729-254-5},
  langid = {english},
  pagetotal = {248},
  keywords = {Application software,Development,Java (Computer program language)},
  annotation = {OCLC: ocn908375612},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\WJESYHSN\\Walls - 2016 - Spring Boot in action.pdf}
}

@online{WhatIdentityAccess,
  title = {What Is Identity and Access Management ({{IAM}})?},
  url = {https://www.redhat.com/en/topics/security/what-identity-and-access-management-iam},
  urldate = {2023-06-25},
  abstract = {Identity and access management (IAM) is a centralized and consistent way to manage user identities (i.e. people, services, and servers), automate access controls, and meet compliance requirements across traditional and containerized environments.},
  langid = {english},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\9M2UBS4F\\what-identity-and-access-management-iam.html}
}

@inproceedings{yangResearchUnifiedAuthentication2020a,
  title = {Research on {{Unified Authentication}} and {{Authorization}} in {{Microservice Architecture}}},
  booktitle = {2020 {{IEEE}} 20th {{International Conference}} on {{Communication Technology}} ({{ICCT}})},
  author = {Yang, ShuLin and Hu, JiePing},
  date = {2020-10},
  pages = {1169--1173},
  issn = {2576-7828},
  doi = {10.1109/ICCT50939.2020.9295931},
  abstract = {Microservice architecture reduces the coupling between application modules, which is conducive to the development, deployment and operation and maintenance of complex application systems. However, compared with the monolithic architecture, the access control of its resources becomes more complex. Based on the application scenario of enterprise system micro service architecture, aiming at the high security requirements of business system, through the analysis and research of micro service architecture, this paper designs a set of access control solution, which can meet the requirements of unified authentication, improving the efficiency of authority verification and accelerating the system development speed under the microservice architecture, which has reference for enterprise application system design significance.},
  eventtitle = {2020 {{IEEE}} 20th {{International Conference}} on {{Communication Technology}} ({{ICCT}})},
  keywords = {Authentication,Authorization,Business,component,Logic gates,microservice architecture,oauth2,Public key,Security,Servers,zuul},
  file = {C\:\\Users\\Ula\\Zotero\\storage\\GGCXJY6R\\ShuLin und JiePing - 2020 - Research on Unified Authentication and Authorizati.pdf;C\:\\Users\\Ula\\Zotero\\storage\\X4IV6TBA\\9295931.html}
}
